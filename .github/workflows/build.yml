# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: platform-building

on:
    push:
        branches: ["main"]
        paths-ignore:
            - "README.md"
            - "README_zh.md"
            - "LICENSE"
    pull_request:
        branches: ["main"]
        paths-ignore:
            - "README.md"
            - "README_zh.md"
            - "LICENSE"

jobs:
    platform-build:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [windows-latest, ubuntu-latest]
                qt_version: [6.8.0]
                build_type: [Release]

        steps:
            - name: Checkout Source code
              uses: actions/checkout@v4

            - name: Install Qt
              uses: jurplel/install-qt-action@v4
              with:
                  version: ${{matrix.qt_version}}
                  cache: true
                  cache-key-prefix: 'Qt'

            - name: Configure CMake
              # Configure CMake in a 'build' subdirectory.
              # `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
              # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
              run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

            - name: Build
              # Build your program with the given configuration.
              # Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
              run: cmake --build ${{github.workspace}}/build --config ${{ matrix.build_type }}

            - name: Test
              working-directory: ${{github.workspace}}/build
                # Execute tests defined by the CMake configuration.
                # Note that --build-config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
                # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
              run: ctest --build-config ${{ matrix.build_type }}